// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package usecase

import (
	"context"
	"github.com/88labs/andpad-engineer-training/2023/Kumar/backend/internal/usecase/input"
	"github.com/88labs/andpad-engineer-training/2023/Kumar/backend/internal/usecase/output"
	"sync"
)

// Ensure, that TodoCreatorMock does implement TodoCreator.
// If this is not the case, regenerate this file with moq.
var _ TodoCreator = &TodoCreatorMock{}

// TodoCreatorMock is a mock implementation of TodoCreator.
//
//	func TestSomethingThatUsesTodoCreator(t *testing.T) {
//
//		// make and configure a mocked TodoCreator
//		mockedTodoCreator := &TodoCreatorMock{
//			CreateTodoFunc: func(ctx context.Context, in *input.TodoCreator) (*output.TodoCreator, error) {
//				panic("mock out the CreateTodo method")
//			},
//		}
//
//		// use mockedTodoCreator in code that requires TodoCreator
//		// and then make assertions.
//
//	}
type TodoCreatorMock struct {
	// CreateTodoFunc mocks the CreateTodo method.
	CreateTodoFunc func(ctx context.Context, in *input.TodoCreator) (*output.TodoCreator, error)

	// calls tracks calls to the methods.
	calls struct {
		// CreateTodo holds details about calls to the CreateTodo method.
		CreateTodo []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// In is the in argument value.
			In *input.TodoCreator
		}
	}
	lockCreateTodo sync.RWMutex
}

// CreateTodo calls CreateTodoFunc.
func (mock *TodoCreatorMock) CreateTodo(ctx context.Context, in *input.TodoCreator) (*output.TodoCreator, error) {
	if mock.CreateTodoFunc == nil {
		panic("TodoCreatorMock.CreateTodoFunc: method is nil but TodoCreator.CreateTodo was just called")
	}
	callInfo := struct {
		Ctx context.Context
		In  *input.TodoCreator
	}{
		Ctx: ctx,
		In:  in,
	}
	mock.lockCreateTodo.Lock()
	mock.calls.CreateTodo = append(mock.calls.CreateTodo, callInfo)
	mock.lockCreateTodo.Unlock()
	return mock.CreateTodoFunc(ctx, in)
}

// CreateTodoCalls gets all the calls that were made to CreateTodo.
// Check the length with:
//
//	len(mockedTodoCreator.CreateTodoCalls())
func (mock *TodoCreatorMock) CreateTodoCalls() []struct {
	Ctx context.Context
	In  *input.TodoCreator
} {
	var calls []struct {
		Ctx context.Context
		In  *input.TodoCreator
	}
	mock.lockCreateTodo.RLock()
	calls = mock.calls.CreateTodo
	mock.lockCreateTodo.RUnlock()
	return calls
}
